[[package]]
name = "annotated-types"
version = "0.7.0"
description = "Reusable constraint types to use with typing.Annotated"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "anyio"
version = "4.8.0"
description = "High level compatibility layer for multiple asynchronous event loop implementations"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
exceptiongroup = {version = ">=1.0.2", markers = "python_version < \"3.11\""}
idna = ">=2.8"
sniffio = ">=1.1"
typing_extensions = {version = ">=4.5", markers = "python_version < \"3.13\""}

[package.extras]
trio = ["trio (>=0.26.1)"]
test = ["anyio", "coverage[toml] (>=7)", "exceptiongroup (>=1.2.0)", "hypothesis (>=4.0)", "psutil (>=5.9)", "pytest (>=7.0)", "trustme", "truststore (>=0.9.1)", "uvloop (>=0.21)"]
doc = ["packaging", "Sphinx (>=7.4,<8.0)", "sphinx-rtd-theme", "sphinx-autodoc-typehints (>=1.2.0)"]

[[package]]
name = "autogen-agentchat"
version = "0.4.2"
description = "AutoGen agents and teams library"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
autogen-core = "0.4.2"

[[package]]
name = "autogen-core"
version = "0.4.2"
description = "Foundational interfaces and agent runtime implementation for AutoGen"
category = "main"
optional = false
python-versions = ">=3.10"

[package.dependencies]
jsonref = ">=1.1.0,<1.2.0"
opentelemetry-api = ">=1.27.0"
pillow = ">=11.0.0"
protobuf = ">=4.25.1,<4.26.0"
pydantic = ">=2.10.0,<3.0.0"
typing-extensions = ">=4.0.0"

[[package]]
name = "certifi"
version = "2024.12.14"
description = "Python package for providing Mozilla's CA Bundle."
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "charset-normalizer"
version = "3.4.1"
description = "The Real First Universal Charset Detector. Open, modern and actively maintained alternative to Chardet."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "colorama"
version = "0.4.6"
description = "Cross-platform colored terminal text."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*,!=3.5.*,!=3.6.*,>=2.7"

[[package]]
name = "deprecated"
version = "1.2.15"
description = "Python @deprecated decorator to deprecate old python classes, functions or methods."
category = "main"
optional = false
python-versions = "!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,>=2.7"

[package.dependencies]
wrapt = ">=1.10,<2"

[package.extras]
dev = ["tox", "pytest", "pytest-cov", "bump2version (<1)", "sphinx (<2)", "jinja2 (>=3.0.3,<3.1.0)", "setuptools"]

[[package]]
name = "diskcache"
version = "5.6.3"
description = "Disk Cache -- Disk and file backed persistent cache."
category = "main"
optional = false
python-versions = ">=3"

[[package]]
name = "distro"
version = "1.9.0"
description = "Distro - an OS platform information API"
category = "main"
optional = false
python-versions = ">=3.6"

[[package]]
name = "docker"
version = "7.1.0"
description = "A Python library for the Docker Engine API."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
pywin32 = {version = ">=304", markers = "sys_platform == \"win32\""}
requests = ">=2.26.0"
urllib3 = ">=1.26.0"

[package.extras]
dev = ["coverage (==7.2.7)", "pytest-cov (==4.1.0)", "pytest-timeout (==2.1.0)", "pytest (==7.4.2)", "ruff (==0.1.8)"]
docs = ["myst-parser (==0.18.0)", "sphinx (==5.1.1)"]
ssh = ["paramiko (>=2.4.3)"]
websockets = ["websocket-client (>=1.3.0)"]

[[package]]
name = "exceptiongroup"
version = "1.2.2"
description = "Backport of PEP 654 (exception groups)"
category = "main"
optional = false
python-versions = ">=3.7"

[package.extras]
test = ["pytest (>=6)"]

[[package]]
name = "flaml"
version = "2.3.3"
description = "A fast library for automated machine learning and tuning"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
NumPy = ">=1.17"

[package.extras]
autogen = ["openai (==0.27.8)", "diskcache", "termcolor"]
automl = ["lightgbm (>=2.3.1)", "xgboost (>=0.90,<3.0.0)", "scipy (>=1.4.1)", "pandas (>=1.1.4)", "scikit-learn (>=1.0.0)"]
autozero = ["scikit-learn", "pandas", "packaging"]
azureml = ["azureml-mlflow"]
benchmark = ["catboost (>=0.26)", "psutil (==5.8.0)", "xgboost (==1.3.3)", "pandas (==1.1.4)"]
blendsearch = ["optuna (>=2.8.0,<=3.6.1)", "packaging"]
catboost = ["catboost (>=0.26,<1.2)", "catboost (>=0.26,<=1.2.5)"]
forecast = ["holidays (<0.14)", "prophet (>=1.0.1)", "statsmodels (>=0.12.2)", "hcrystalball (==0.1.10)", "pytorch-lightning (==1.9.0)", "tensorboardX (==2.6)", "pytorch-forecasting (>=0.9.0)"]
hf = ["transformers[torch] (==4.26)", "datasets", "nltk (<=3.8.1)", "rouge-score", "seqeval"]
mathchat = ["openai (==0.27.8)", "diskcache", "termcolor", "sympy", "pydantic (==1.10.9)", "wolframalpha"]
nlp = ["transformers[torch] (==4.26)", "datasets", "nltk (<=3.8.1)", "rouge-score", "seqeval"]
nni = ["nni"]
notebook = ["jupyter"]
openai = ["openai (==0.27.8)", "diskcache"]
ray = ["ray[tune] (>=1.13,<2.0)"]
retrievechat = ["openai (==0.27.8)", "diskcache", "termcolor", "chromadb", "tiktoken", "sentence-transformers"]
spark = ["pyspark (>=3.2.0)", "joblibspark (>=0.5.0)", "joblib (<=1.3.2)"]
synapse = ["joblibspark (>=0.5.0)", "optuna (>=2.8.0,<=3.6.1)", "pyspark (>=3.2.0)"]
test = ["jupyter", "lightgbm (>=2.3.1)", "xgboost (>=0.90,<2.0.0)", "scipy (>=1.4.1)", "scikit-learn (>=1.0.0)", "thop", "pytest (>=6.1.1)", "coverage (>=5.3)", "pre-commit", "torch", "torchvision", "rgf-python", "optuna (>=2.8.0,<=3.6.1)", "openml", "statsmodels (>=0.12.2)", "psutil (==5.8.0)", "dataclasses", "transformers[torch] (==4.26)", "datasets", "nltk (<=3.8.1)", "rouge-score", "hcrystalball (==0.1.10)", "seqeval", "mlflow (==2.15.1)", "joblibspark (>=0.5.0)", "joblib (<=1.3.2)", "nbconvert", "nbformat", "ipykernel", "pytorch-lightning (<1.9.1)", "tensorboardX (==2.6)", "requests (<2.29.0)", "packaging", "pydantic (==1.10.9)", "sympy", "wolframalpha", "dill", "pandas (>=1.1.4,<2.0.0)", "catboost (>=0.26,<1.2)", "pytorch-forecasting (>=0.9.0,<=0.10.1)", "pandas (>=1.1.4)", "catboost (>=0.26)"]
ts-forecast = ["holidays (<0.14)", "prophet (>=1.0.1)", "statsmodels (>=0.12.2)", "hcrystalball (==0.1.10)"]
vw = ["vowpalwabbit (>=8.10.0,<9.0.0)", "scikit-learn"]

[[package]]
name = "h11"
version = "0.14.0"
description = "A pure-Python, bring-your-own-I/O implementation of HTTP/1.1"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "httpcore"
version = "1.0.7"
description = "A minimal low-level HTTP client."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
certifi = "*"
h11 = ">=0.13,<0.15"

[package.extras]
asyncio = ["anyio (>=4.0,<5.0)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]
trio = ["trio (>=0.22.0,<1.0)"]

[[package]]
name = "httpx"
version = "0.28.1"
description = "The next generation HTTP client."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = "*"
certifi = "*"
httpcore = ">=1.0.0,<2.0.0"
idna = "*"

[package.extras]
brotli = ["brotli", "brotlicffi"]
cli = ["click (>=8.0.0,<9.0.0)", "pygments (>=2.0.0,<3.0.0)", "rich (>=10,<14)"]
http2 = ["h2 (>=3,<5)"]
socks = ["socksio (>=1.0.0,<2.0.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "idna"
version = "3.10"
description = "Internationalized Domain Names in Applications (IDNA)"
category = "main"
optional = false
python-versions = ">=3.6"

[package.extras]
all = ["ruff (>=0.6.2)", "mypy (>=1.11.2)", "pytest (>=8.3.2)", "flake8 (>=7.1.1)"]

[[package]]
name = "importlib-metadata"
version = "8.5.0"
description = "Read metadata from Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
zipp = ">=3.20"

[package.extras]
check = ["pytest-checkdocs (>=2.4)", "pytest-ruff (>=0.2.1)"]
cover = ["pytest-cov"]
doc = ["sphinx (>=3.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
enabler = ["pytest-enabler (>=2.2)"]
perf = ["ipython"]
test = ["pytest (>=6,<8.1.0 || >=8.2.0)", "packaging", "pyfakefs", "flufl.flake8", "pytest-perf (>=0.9.2)", "jaraco.test (>=5.4)", "importlib-resources (>=1.3)"]
type = ["pytest-mypy"]

[[package]]
name = "jiter"
version = "0.8.2"
description = "Fast iterable JSON parser."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "jsonref"
version = "1.1.0"
description = "jsonref is a library for automatic dereferencing of JSON Reference objects for Python."
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "numpy"
version = "1.26.4"
description = "Fundamental package for array computing in Python"
category = "main"
optional = false
python-versions = ">=3.9"

[[package]]
name = "openai"
version = "1.59.7"
description = "The official Python library for the openai API"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
anyio = ">=3.5.0,<5"
distro = ">=1.7.0,<2"
httpx = ">=0.23.0,<1"
jiter = ">=0.4.0,<1"
pydantic = ">=1.9.0,<3"
sniffio = "*"
tqdm = ">4"
typing-extensions = ">=4.11,<5"

[package.extras]
datalib = ["numpy (>=1)", "pandas-stubs (>=1.1.0.11)", "pandas (>=1.2.3)"]
realtime = ["websockets (>=13,<15)"]

[[package]]
name = "opentelemetry-api"
version = "1.29.0"
description = "OpenTelemetry Python API"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
deprecated = ">=1.2.6"
importlib-metadata = ">=6.0,<=8.5.0"

[[package]]
name = "packaging"
version = "24.2"
description = "Core utilities for Python packages"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pillow"
version = "11.1.0"
description = "Python Imaging Library (Fork)"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
docs = ["furo", "olefile", "sphinx (>=8.1)", "sphinx-copybutton", "sphinx-inline-tabs", "sphinxext-opengraph"]
fpx = ["olefile"]
mic = ["olefile"]
tests = ["check-manifest", "coverage (>=7.4.2)", "defusedxml", "markdown2", "olefile", "packaging", "pyroma", "pytest", "pytest-cov", "pytest-timeout", "trove-classifiers (>=2024.10.12)"]
typing = ["typing-extensions"]
xmp = ["defusedxml"]

[[package]]
name = "protobuf"
version = "4.25.5"
description = ""
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "pyautogen"
version = "0.2.35"
description = "Enabling Next-Gen LLM Applications via Multi-Agent Conversation Framework"
category = "main"
optional = false
python-versions = "<3.13,>=3.8"

[package.dependencies]
diskcache = "*"
docker = "*"
flaml = "*"
numpy = ">=1.17.0,<2"
openai = ">=1.3"
packaging = "*"
pydantic = ">=1.10,<2.6.0 || >2.6.0,<3"
python-dotenv = "*"
termcolor = "*"
tiktoken = "*"

[package.extras]
anthropic = ["anthropic (>=0.23.1)"]
autobuild = ["chromadb", "huggingface-hub", "pysqlite3", "sentence-transformers"]
blendsearch = ["flaml"]
cohere = ["cohere (>=5.5.8)"]
cosmosdb = ["azure-cosmos (>=4.2.0)"]
gemini = ["google-auth", "google-cloud-aiplatform", "google-generativeai (>=0.5,<1)", "pillow", "pydantic"]
graph = ["matplotlib", "networkx"]
groq = ["groq (>=0.9.0)"]
jupyter-executor = ["ipykernel (>=6.29.0)", "jupyter-client (>=8.6.0)", "jupyter-kernel-gateway", "requests", "websocket-client"]
lmm = ["pillow", "replicate"]
long-context = ["llmlingua (<0.3)"]
mathchat = ["pydantic (==1.10.9)", "sympy", "wolframalpha"]
mistral = ["mistralai (>=1.0.1)"]
redis = ["redis"]
retrievechat = ["beautifulsoup4", "chromadb", "ipython", "markdownify", "protobuf (==4.25.3)", "pypdf", "sentence-transformers"]
retrievechat-mongodb = ["beautifulsoup4", "chromadb", "ipython", "markdownify", "protobuf (==4.25.3)", "pymongo (>=4.0.0)", "pypdf", "sentence-transformers"]
retrievechat-pgvector = ["beautifulsoup4", "chromadb", "ipython", "markdownify", "pgvector (>=0.2.5)", "protobuf (==4.25.3)", "psycopg (>=3.1.18)", "pypdf", "sentence-transformers"]
retrievechat-qdrant = ["beautifulsoup4", "chromadb", "fastembed (>=0.3.1)", "ipython", "markdownify", "protobuf (==4.25.3)", "pypdf", "qdrant-client", "sentence-transformers"]
teachable = ["chromadb"]
test = ["ipykernel", "nbconvert", "nbformat", "pandas", "pre-commit", "pytest-asyncio", "pytest-cov (>=5)", "pytest (>=6.1.1,<8)"]
together = ["together (>=1.2)"]
types = ["ipykernel (>=6.29.0)", "jupyter-client (>=8.6.0)", "jupyter-kernel-gateway", "mypy (==1.9.0)", "pytest (>=6.1.1,<8)", "requests", "websocket-client"]
websockets = ["websockets (>=12.0,<13)"]
websurfer = ["beautifulsoup4", "markdownify", "pathvalidate", "pdfminer.six"]

[[package]]
name = "pydantic"
version = "2.10.5"
description = "Data validation using Python type hints"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
annotated-types = ">=0.6.0"
pydantic-core = "2.27.2"
typing-extensions = ">=4.12.2"

[package.extras]
email = ["email-validator (>=2.0.0)"]
timezone = ["tzdata"]

[[package]]
name = "pydantic-core"
version = "2.27.2"
description = "Core functionality for Pydantic validation and serialization"
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
typing-extensions = ">=4.6.0,<4.7.0 || >4.7.0"

[[package]]
name = "python-dotenv"
version = "1.0.1"
description = "Read key-value pairs from a .env file and set them as environment variables"
category = "main"
optional = false
python-versions = ">=3.8"

[package.extras]
cli = ["click (>=5.0)"]

[[package]]
name = "pywin32"
version = "308"
description = "Python for Window Extensions"
category = "main"
optional = false
python-versions = "*"

[[package]]
name = "regex"
version = "2024.11.6"
description = "Alternative regular expression module, to replace re."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "requests"
version = "2.32.3"
description = "Python HTTP for Humans."
category = "main"
optional = false
python-versions = ">=3.8"

[package.dependencies]
certifi = ">=2017.4.17"
charset-normalizer = ">=2,<4"
idna = ">=2.5,<4"
urllib3 = ">=1.21.1,<3"

[package.extras]
socks = ["PySocks (>=1.5.6,!=1.5.7)"]
use-chardet-on-py3 = ["chardet (>=3.0.2,<6)"]

[[package]]
name = "sniffio"
version = "1.3.1"
description = "Sniff out which async library your code is running under"
category = "main"
optional = false
python-versions = ">=3.7"

[[package]]
name = "termcolor"
version = "2.5.0"
description = "ANSI color formatting for output in terminal"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
tests = ["pytest", "pytest-cov"]

[[package]]
name = "tiktoken"
version = "0.8.0"
description = "tiktoken is a fast BPE tokeniser for use with OpenAI's models"
category = "main"
optional = false
python-versions = ">=3.9"

[package.dependencies]
regex = ">=2022.1.18"
requests = ">=2.26.0"

[package.extras]
blobfile = ["blobfile (>=2)"]

[[package]]
name = "tqdm"
version = "4.67.1"
description = "Fast, Extensible Progress Meter"
category = "main"
optional = false
python-versions = ">=3.7"

[package.dependencies]
colorama = {version = "*", markers = "platform_system == \"Windows\""}

[package.extras]
dev = ["pytest (>=6)", "pytest-cov", "pytest-timeout", "pytest-asyncio (>=0.24)", "nbval"]
discord = ["requests"]
slack = ["slack-sdk"]
telegram = ["requests"]
notebook = ["ipywidgets (>=6)"]

[[package]]
name = "typing-extensions"
version = "4.12.2"
description = "Backported and Experimental Type Hints for Python 3.8+"
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "urllib3"
version = "2.3.0"
description = "HTTP library with thread-safe connection pooling, file post, and more."
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
brotli = ["brotli (>=1.0.9)", "brotlicffi (>=0.8.0)"]
h2 = ["h2 (>=4,<5)"]
socks = ["pysocks (>=1.5.6,!=1.5.7,<2.0)"]
zstd = ["zstandard (>=0.18.0)"]

[[package]]
name = "wrapt"
version = "1.17.2"
description = "Module for decorators, wrappers and monkey patching."
category = "main"
optional = false
python-versions = ">=3.8"

[[package]]
name = "zipp"
version = "3.21.0"
description = "Backport of pathlib-compatible object wrapper for zip files"
category = "main"
optional = false
python-versions = ">=3.9"

[package.extras]
check = ["pytest-checkdocs (>=2.4)", "pytest-ruff (>=0.2.1)"]
cover = ["pytest-cov"]
doc = ["sphinx (>=3.5)", "jaraco.packaging (>=9.3)", "rst.linker (>=1.9)", "furo", "sphinx-lint", "jaraco.tidelift (>=1.4)"]
enabler = ["pytest-enabler (>=2.2)"]
test = ["pytest (>=6,<8.1.0 || >=8.2.0)", "jaraco.itertools", "jaraco.functools", "more-itertools", "big-o", "pytest-ignore-flaky", "jaraco.test", "importlib-resources"]
type = ["pytest-mypy"]

[metadata]
lock-version = "1.1"
python-versions = ">=3.10,<3.12"
content-hash = "01e2e1a44bf97d292fdc12c8bf460cfc836844a2a1228d643626b291e7f0c87a"

[metadata.files]
annotated-types = []
anyio = []
autogen-agentchat = []
autogen-core = []
certifi = []
charset-normalizer = []
colorama = []
deprecated = []
diskcache = []
distro = []
docker = []
exceptiongroup = []
flaml = []
h11 = []
httpcore = []
httpx = []
idna = []
importlib-metadata = []
jiter = []
jsonref = []
numpy = []
openai = []
opentelemetry-api = []
packaging = []
pillow = []
protobuf = []
pyautogen = []
pydantic = []
pydantic-core = []
python-dotenv = []
pywin32 = []
regex = []
requests = []
sniffio = []
termcolor = []
tiktoken = []
tqdm = []
typing-extensions = []
urllib3 = []
wrapt = []
zipp = []
